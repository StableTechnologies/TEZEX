{"version":3,"file":"static/js/792.194f3e1d.chunk.js","mappings":"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","sources":["../node_modules/@taquito/http-utils/node_modules/@vespaiach/axios-fetch-adapter/index.js"],"sourcesContent":["import axios from 'axios';\r\nimport settle from 'axios/lib/core/settle';\r\nimport buildURL from 'axios/lib/helpers/buildURL';\r\nimport buildFullPath from 'axios/lib/core/buildFullPath';\r\nimport { isUndefined, isStandardBrowserEnv, isFormData } from 'axios/lib/utils';\r\n\r\n/**\r\n * - Create a request object\r\n * - Get response body\r\n * - Check if timeout\r\n */\r\nexport default async function fetchAdapter(config) {\r\n    const request = createRequest(config);\r\n    const promiseChain = [getResponse(request, config)];\r\n\r\n    if (config.timeout && config.timeout > 0) {\r\n        promiseChain.push(\r\n            new Promise((res) => {\r\n                setTimeout(() => {\r\n                    const message = config.timeoutErrorMessage\r\n                        ? config.timeoutErrorMessage\r\n                        : 'timeout of ' + config.timeout + 'ms exceeded';\r\n                    res(createError(message, config, 'ECONNABORTED', request));\r\n                }, config.timeout);\r\n            })\r\n        );\r\n    }\r\n\r\n    const data = await Promise.race(promiseChain);\r\n    return new Promise((resolve, reject) => {\r\n        if (data instanceof Error) {\r\n            reject(data);\r\n        } else {\r\n            Object.prototype.toString.call(config.settle) === '[object Function]'\r\n                ? config.settle(resolve, reject, data)\r\n                : settle(resolve, reject, data);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n/**\r\n * Fetch API stage two is to get response body. This funtion tries to retrieve\r\n * response body based on response's type\r\n */\r\nasync function getResponse(request, config) {\r\n    let stageOne;\r\n    try {\r\n        stageOne = await fetch(request);\r\n    } catch (e) {\r\n        return createError('Network Error', config, 'ERR_NETWORK', request);\r\n    }\r\n\r\n    const response = {\r\n        ok: stageOne.ok,\r\n        status: stageOne.status,\r\n        statusText: stageOne.statusText,\r\n        headers: new Headers(stageOne.headers), // Make a copy of headers\r\n        config: config,\r\n        request,\r\n    };\r\n\r\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\r\n        switch (config.responseType) {\r\n            case 'arraybuffer':\r\n                response.data = await stageOne.arrayBuffer();\r\n                break;\r\n            case 'blob':\r\n                response.data = await stageOne.blob();\r\n                break;\r\n            case 'json':\r\n                response.data = await stageOne.json();\r\n                break;\r\n            case 'formData':\r\n                response.data = await stageOne.formData();\r\n                break;\r\n            default:\r\n                response.data = await stageOne.text();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return response;\r\n}\r\n\r\n/**\r\n * This function will create a Request object based on configuration's axios\r\n */\r\nfunction createRequest(config) {\r\n    const headers = new Headers(config.headers);\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n        const username = config.auth.username || '';\r\n        const password = config.auth.password ? decodeURI(encodeURIComponent(config.auth.password)) : '';\r\n        headers.set('Authorization', `Basic ${btoa(username + ':' + password)}`);\r\n    }\r\n\r\n    const method = config.method.toUpperCase();\r\n    const options = {\r\n        headers: headers,\r\n        method,\r\n    };\r\n    if (method !== 'GET' && method !== 'HEAD') {\r\n        options.body = config.data;\r\n\r\n        // In these cases the browser will automatically set the correct Content-Type,\r\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\r\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\r\n            headers.delete('Content-Type');\r\n        }\r\n    }\r\n    if (config.mode) {\r\n        options.mode = config.mode;\r\n    }\r\n    if (config.cache) {\r\n        options.cache = config.cache;\r\n    }\r\n    if (config.integrity) {\r\n        options.integrity = config.integrity;\r\n    }\r\n    if (config.redirect) {\r\n        options.redirect = config.redirect;\r\n    }\r\n    if (config.referrer) {\r\n        options.referrer = config.referrer;\r\n    }\r\n    // This config is similar to XHRâ€™s withCredentials flag, but with three available values instead of two.\r\n    // So if withCredentials is not set, default value 'same-origin' will be used\r\n    if (!isUndefined(config.withCredentials)) {\r\n        options.credentials = config.withCredentials ? 'include' : 'omit';\r\n    }\r\n\r\n    const fullPath = buildFullPath(config.baseURL, config.url);\r\n    const url = buildURL(fullPath, config.params, config.paramsSerializer);\r\n\r\n    // Expected browser to throw error if there is any wrong configuration value\r\n    return new Request(url, options);\r\n}\r\n\r\n\r\n\r\n/**\r\n * Note:\r\n * \r\n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\r\n *   So I copy the old createError function here for backward compatible.\r\n * \r\n * \r\n * \r\n * Create an Error with the specified message, config, error code, request and response.\r\n *\r\n * @param {string} message The error message.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The created error.\r\n */\r\nfunction createError(message, config, code, request, response) {\r\n    if (axios.AxiosError && typeof axios.AxiosError === 'function') {\r\n        return new axios.AxiosError(message, axios.AxiosError[code], config, request, response);\r\n    }\r\n\r\n    var error = new Error(message);\r\n    return enhanceError(error, config, code, request, response);\r\n};\r\n\r\n/**\r\n * \r\n * Note:\r\n * \r\n *   This function is for backward compatible.\r\n * \r\n *  \r\n * Update an Error with the specified config, error code, and response.\r\n *\r\n * @param {Error} error The error to update.\r\n * @param {Object} config The config.\r\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n * @param {Object} [request] The request.\r\n * @param {Object} [response] The response.\r\n * @returns {Error} The error.\r\n */\r\nfunction enhanceError(error, config, code, request, response) {\r\n  error.config = config;\r\n  if (code) {\r\n    error.code = code;\r\n  }\r\n\r\n  error.request = request;\r\n  error.response = response;\r\n  error.isAxiosError = true;\r\n\r\n  error.toJSON = function toJSON() {\r\n    return {\r\n      // Standard\r\n      message: this.message,\r\n      name: this.name,\r\n      // Microsoft\r\n      description: this.description,\r\n      number: this.number,\r\n      // Mozilla\r\n      fileName: this.fileName,\r\n      lineNumber: this.lineNumber,\r\n      columnNumber: this.columnNumber,\r\n      stack: this.stack,\r\n      // Axios\r\n      config: this.config,\r\n      code: this.code,\r\n      status: this.response && this.response.status ? this.response.status : null\r\n    };\r\n  };\r\n  return error;\r\n};\r\n"],"names":["fetchAdapter","config","request","createRequest","promiseChain","getResponse","timeout","push","Promise","res","setTimeout","message","timeoutErrorMessage","createError","race","data","resolve","reject","Error","Object","prototype","toString","call","settle","fetch","stageOne","response","ok","status","statusText","headers","Headers","responseType","arrayBuffer","blob","json","formData","text","auth","username","password","decodeURI","encodeURIComponent","set","btoa","method","toUpperCase","options","body","isFormData","isStandardBrowserEnv","delete","mode","cache","integrity","redirect","referrer","isUndefined","withCredentials","credentials","fullPath","buildFullPath","baseURL","url","buildURL","params","paramsSerializer","Request","code","axios","error","isAxiosError","toJSON","this","name","description","number","fileName","lineNumber","columnNumber","stack","enhanceError"],"sourceRoot":""}